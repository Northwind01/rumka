name: Data continuous integration
on:
  push:
    branches:
    - new_train_data
    paths:
    - 'data/**'

jobs:
  # lint-testing:
  #   name: Code formatting tests
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python 3.7
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.7
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade "pip<20"
  #       pip install -r requirements-dev.txt
  #   - name: Code formatting tests
  #     working-directory: ${{ github.workspace }}
  #     run: |
  #       make lint
  # type-testing:
  #   name: Type tests
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: Set up Python 3.7
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.7
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade "pip<20"
  #       pip install -r requirements-dev.txt
  #   - name: Type checking
  #     working-directory: ${{ github.workspace }}
  #     run: |
  #       make types
  data-validation:
    name: Data validation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade "pip<20"
        pip install -r requirements-dev.txt
    - name: Rasa data validation
      working-directory: ${{ github.workspace }}
      run: |
        rasa data validate --debug
  training-testing:
    name: Testing stories
    runs-on: ubuntu-latest
    needs: [data-validation]
    steps:
    - uses: actions/checkout@v1
    - id: files
      uses: jitterbit/get-changed-files@v1
    - name: set_training
      if: |
          contains(  steps.files.outputs.all, 'data/' ) 
          || contains(  steps.files.outputs.all, 'config.yml' ) 
          || contains(  steps.files.outputs.all, 'domain.yml' )
      run: echo "RUN_TRAINING=true"  >> $GITHUB_ENV
    - name: Set up Python 3.7
      if: env.RUN_TRAINING == 'true'
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      if: env.RUN_TRAINING == 'true'
      run: |
          python -m pip install --upgrade "pip<20"
          pip install -r requirements-dev.txt
    - name: Cross-validate NLU model
      id: cvnlu
      if: |
          ( 
            ( 
              contains( github.event.pull_request.labels.*.name, 'nlu_testing_required' ) 
              && contains(  steps.files.outputs.all, 'data/nlu/' ) 
            )
            || contains(  steps.files.outputs.all, 'config.yml' ) 
          )
      run: |  
          rasa test nlu -f 3 --cross-validation
          python .github/workflows/format_results.py
    - name: post cross-val results to PR
      if: steps.cvnlu.outcome == 'success'
      uses: amn41/comment-on-pr@comment-file-contents
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: results.md
    - name: Train model
      if: env.RUN_TRAINING == 'true'
      working-directory: ${{ github.workspace }}
      run: |
        rasa train
    - name: Test training stories
      if: |
          contains(  steps.files.outputs.all, 'data/core/' ) 
          || contains(  steps.files.outputs.all, 'config.yml' ) 
          || contains(  steps.files.outputs.all, 'domain.yml' )
      working-directory: ${{ github.workspace }}
      run: |
        rasa test core --stories test/test_stories.md --fail-on-prediction-errors
    - name: Upload model
      if: |
          github.ref == 'refs/heads/main'
          && env.RUN_TRAINING == 'true'
      uses: actions/upload-artifact@main
      with:
        name: model
        path: models
